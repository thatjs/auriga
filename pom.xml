<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.thatjs.saas</groupId>
  <artifactId>auriga</artifactId>
  <packaging>war</packaging>   <!-- adding war here adds war *-INF folders to target/, prevents .jar -->
  <version>1.0-SNAPSHOT</version>
  <name>auriga - A Thatjs Project</name>
  <url>http://www.thatjs.com</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <target.finalName>${project.basedir}/target/${project.build.finalName}</target.finalName>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.lesscss</groupId>
        <artifactId>lesscss-maven-plugin</artifactId>
        <version>1.3.3</version>
        <configuration>
            <sourceDirectory>${project.basedir}/src/main/webapp/less</sourceDirectory>
            <outputDirectory>${target.finalName}/css</outputDirectory>
            <compress>false</compress>
            <force>true</force>
            <concatenate>true</concatenate>
            <!-- <includes> -->
                <!-- <include>main.less</include> -->
            <!-- </includes> -->
            <excludes>
                <exclude>layout.less</exclude>
            </excludes>
        </configuration>
        <executions>
            <execution>
                <goals>
                    <goal>compile</goal>
                </goals>
            </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.googlecode.jslint4java</groupId>
        <artifactId>jslint4java-maven-plugin</artifactId>
        <version>2.0.3</version>
        <configuration>
            <failOnError>true</failOnError>
            <options>
                <predef>angular,describe,it,xdescribe,xit,beforeEach,afterEach,expect</predef>
                <browser>true</browser>
                <maxlen>150</maxlen>
                <todo>true</todo>  <!-- Allow 'todo' comments in code -->
                <continue>true</continue>  <!-- allow use of continue in loops -->
                <!-- To match recommended Eclipse settings in coding standards -->
                <sloppy>true</sloppy>  <!-- Don't require 'strict' -->
                <nomen>true</nomen>  <!-- Don't check names (allow trailing underscores, etc) -->
                <vars>true</vars>  <!-- Allow multiple var statements per functon -->
                <plusplus>true</plusplus>  <!-- Allow increment/decrement operators -->
                <regexp>true</regexp>  <!-- the . should be allowed in regexp literals -->
            </options>
            <sourceFolders>
                <sourceFolder>src/main/webapp/js</sourceFolder>
                <sourceFolder>src/test/js</sourceFolder>
            </sourceFolders>
            <excludes>
                <exclude>lib/**/*.js</exclude>
                <exclude>ref/**/*.js</exclude>
                <exclude>**/*min.js</exclude>
            </excludes>
            <outputFolder>target/jslint</outputFolder>
            <timeout>30</timeout>
        </configuration>
        <executions>
            <execution>
                <id>lint</id>
                <phase>process-resources</phase>
                <goals>
                    <goal>lint</goal>
                </goals>
            </execution>
        </executions>
      </plugin>

      <plugin>
		<groupId>net.alchim31.maven</groupId>
		<artifactId>yuicompressor-maven-plugin</artifactId>
		<version>1.3.0</version>
		<configuration>
			<excludes>
            	<exclude>**/lib/**/*.*</exclude>
            	<exclude>**/js/ref/**/*.*</exclude>
        	</excludes>
        	<aggregations>
        	    <aggregation>
                    <insertNewLine>true</insertNewLine>
                    <output>${project.basedir}/src/main/webapp/js/out/angular/that.js</output>
                    <includes>
                        <include>${project.basedir}/src/main/webapp/js/thatjs/angular/main/app.js</include>
                        <include>${project.basedir}/src/main/webapp/js/thatjs/angular/main/routes.js</include>
<!--                        <include>${project.basedir}/src/main/webapp/js/thatjs/angular/services/services.js</include>-->
                        <include>${project.basedir}/src/main/webapp/js/thatjs/angular/directives/navbar.js</include>
                        <include>${project.basedir}/src/main/webapp/js/thatjs/angular/directives/quickNotes.js</include>
                    </includes>
        	    </aggregation>
        	    <aggregation>
                    <output>${project.basedir}/src/main/webapp/js/out/angular/that-min.js</output>
                    <includes>
                        <include>${target.finalName}/js/thatjs/angular/main/app-min.js</include>
                        <include>${target.finalName}/js/thatjs/angular/main/routes-min.js</include>
<!--                        <include>${target.finalName}/js/thatjs/angular/services/services-min.js</include>-->
                        <include>${target.finalName}/js/thatjs/angular/directives/navbar-min.js</include>
                        <include>${target.finalName}/js/thatjs/angular/directives/quickNotes-min.js</include>
                    </includes>
        	    </aggregation>
        	    <aggregation>
                    <output>${project.basedir}/src/main/webapp/css/that.css</output>
                    <includes>
                        <include>${target.finalName}/css/thatjs.css</include>
                    </includes>
        	    </aggregation>
        	</aggregations>
		</configuration>
		<executions>
			<execution>
				<id>compile-js-css</id>
            	<phase>process-resources</phase>
            	<goals>
                	<goal>compress</goal>
            	</goals>
			</execution>
		</executions>
	  </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <configuration>
            <filesets>
                <fileset>
                    <directory>src/main/webapp/css</directory>
                </fileset>
                <fileset>
                    <directory>src/main/webapp/js/out</directory>
                </fileset>
            </filesets>

            <executions>
                <execution>
                    <id>after-test</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>clean-root</goal>
                    </goals>
                </execution>
            </executions>

        </configuration>
      </plugin>

      <plugin>
        <groupId>com.kelveden</groupId>
        <artifactId>maven-karma-plugin</artifactId>
        <version>1.6</version>
        <executions>
            <execution>
                <phase>test</phase>
                <goals>
                    <goal>start</goal>
                </goals>
            </execution>
        </executions>
        <configuration>
            <configFile>karma.conf.js</configFile>
            <!-- <junitReportFile>src/main/webapp/resources/test-results.xml</junitReportFile> -->
            <junitReportFile>src/test/resources/test-results.xml</junitReportFile>
            <reportsDirectory>${project.build.directory}/karma-reports</reportsDirectory>
            <browsers>PhantomJS</browsers>
            <autoWatch>false</autoWatch>
            <singleRun>true</singleRun>
            <colors>true</colors>
            <skipKarma>true</skipKarma>  <!-- skip for now -->
            <skipTests>true</skipTests>  <!-- skip for now -->
            <karmaFailureIgnore>false</karmaFailureIgnore>
            <reporters>junit,dots</reporters>
        </configuration>
      </plugin>

	  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.3</version>
			<executions>
				<execution>
					<id>default-war</id>
					<phase>package</phase>
					<goals>
						<goal>war</goal>
					</goals>
					<configuration>
		<!-- comment out war file generation, verify target/auriga/ directory first -->
<!--                	<warSourceDirectory>${basedir}/target</warSourceDirectory> commented out -->
<!--                	<warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>-->
<!--                	<encoding>UTF-8</encoding>-->
<!--                	<classesDirectory>${project.build.outputDirectory}</classesDirectory>-->
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<archive>
							<manifestEntries>
								<Specification-Title>${project.name}</Specification-Title>
								<Specification-Version>${project.version}</Specification-Version>
								<Implementation-Version>${build.number}</Implementation-Version>
							</manifestEntries>
						</archive>
					</configuration>
				</execution>
			</executions>
<!--        <configuration>-->
        <!-- comment out war file generation, verify target/auriga/ directory first -->
<!--            <warSourceDirectory>${basedir}/target</warSourceDirectory> commented out -->
<!--            <warSourceDirectory>${basedir}/src/main/webapp</warSourceDirectory>-->
<!--        	<encoding>UTF-8</encoding>-->
<!--        	<webResources>-->
<!--            	<resource>-->
<!--                	<directory>${basedir}/src/main/webapp/main</directory>-->
<!--            	</resource>-->
<!--        	</webResources>-->
<!--        	<webXml>src/main/webapp/WEB-INF/web.xml</webXml>-->
<!--    	</configuration>-->
	</plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
            <port>8060</port>
            <path>/</path>
        </configuration>
      </plugin>

    </plugins>

  </build>
</project>
