<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.thatjs.saas</groupId>
  <artifactId>auriga</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>auriga - A Thatjs Project</name>
  <url>http://www.thatjs.com</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

    <!-- minify-maven-plugin download binary. $ mvn install:install-file ... -->

  </dependencies>
  <build>
    <finalName>auriga</finalName>

    <plugins>
      <plugin>
        <groupId>org.lesscss</groupId>
        <artifactId>lesscss-maven-plugin</artifactId>
        <version>1.3.3</version>
        <configuration>
            <sourceDirectory>${project.basedir}/src/main/webapp/less</sourceDirectory>
            <!-- <outputDirectory>${project.build.directory}/${project.build.finalName}/css</outputDirectory> -->
            <outputDirectory>${project.basedir}/src/main/webapp/css</outputDirectory>
            <compress>false</compress>
            <force>true</force>
            <concatenate>true</concatenate>
            <!-- <includes> -->
                <!-- <include>main.less</include> -->
            <!-- </includes> -->
            <excludes>
                <exclude>layout.less</exclude>
            </excludes>
        </configuration>
        <executions>
            <execution>
                <goals>
                    <goal>compile</goal>
                </goals>
            </execution>
        </executions>
        <!-- <dependencies> -->
            <!-- <dependency> -->
                <!-- <groupId>org.lesscss</groupId> -->
                <!-- <artifactId>lesscss</artifactId> -->
                <!-- <version>1.5.1-SNAPSHOT</version> -->
            <!-- </dependency> -->
        <!-- </dependencies> -->
      </plugin>

      <plugin>
        <groupId>com.samaxes.maven</groupId>
        <artifactId>minify-maven-plugin</artifactId>
        <version>1.7.2</version>
        <executions>
            <execution>
                <id>thatjs</id>
                <configuration>
                    <charset>UTF-8</charset>
                    <jsEngine>CLOSURE</jsEngine>
                    <jsSourceDir>js/thatjs/main</jsSourceDir>
                    <jsSourceFiles>
                        <jsSourceFile>app.js</jsSourceFile>
                    </jsSourceFiles>
                    <jsFinalFile>that.js</jsFinalFile>
                </configuration>
                <phase>process-resources</phase>
                <goals>
                    <goal>minify</goal>
                </goals>
            </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
        <configuration>
            <filesets>
                <fileset>
                    <directory>src/main/webapp/css</directory>
                </fileset>
                <fileset>
                    <directory>src/main/webapp/js</directory>
                    <includes>
                        <include>*.js</include>
                    </includes>
                </fileset>
            </filesets>

            <executions>
                <execution>
                    <id>after-test</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>clean-root</goal>
                    </goals>
                </execution>
            </executions>

        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
            <version>1.7</version>
            <executions>
                <execution>
                    <id>copy-js-output-files</id>
                    <phase>process-resources</phase>
                    <configuration>
                        <target>
                            <echo>Copy minified js files</echo>
                            <copy todir="${basedir}/src/main/webapp/js">
                                <fileset dir="${basedir}/target/auriga/js/thatjs/main">
                                    <include name="*.js" />
                                </fileset>
                            </copy>
                        </target>
                    </configuration>
                    <goals>
                        <goal>run</goal>
                    </goals>
                </execution>
            </executions>
      </plugin>

      <plugin>
        <groupId>com.googlecode.jslint4java</groupId>
        <artifactId>jslint4java-maven-plugin</artifactId>
        <version>2.0.3</version>
        <configuration>
            <failOnError>true</failOnError>
            <options>
                <predef>angular,describe,it,xdescribe,xit,beforeEach,afterEach,expect</predef>
                <browser>true</browser>
                <maxlen>120</maxlen>
                <todo>true</todo>  <!-- Allow 'todo' comments in code -->
                <continue>true</continue>  <!-- allow use of continue in loops -->
                <!-- To match recommended Eclipse settings in coding standards -->
                <sloppy>true</sloppy>  <!-- Don't require 'strict' -->
                <nomen>true</nomen>  <!-- Don't check names (allow trailing underscores, etc) -->
                <vars>true</vars>  <!-- Allow multiple var statements per functon -->
                <plusplus>true</plusplus>  <!-- Allow increment/decrement operators -->
                <regexp>true</regexp>  <!-- the . should be allowed in regexp literals -->
            </options>
            <sourceFolders>
                <sourceFolder>src/main/webapp/js</sourceFolder>
                <sourceFolder>src/test/js</sourceFolder>
            </sourceFolders>
            <excludes>
                <exclude>lib/**/*.js</exclude>
                <exclude>that.min.js</exclude>
            </excludes>
            <outputFolder>target/jslint</outputFolder>
            <timeout>30</timeout>
        </configuration>
        <executions>
            <execution>
                <id>lint</id>
                <phase>process-resources</phase>
                <goals>
                    <goal>lint</goal>
                </goals>
            </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <version>1.3.1.4</version>
        <configuration>
            <!-- <webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName> -->
            <!-- <webDriverCapabilities> -->
              <!-- <phantomjs.binary.path>target\phantomjs-maven-plugin\phantomjs-1.9.2-windows\phantomjs.exe</phantomjs.binary.path> -->
            <!-- </webDriverCapabilities> -->

            <!-- <keepServerAlive>true</keepServerAlive> -->

            <jsSrcDir>${project.basedir}/src/main/webapp/js</jsSrcDir>

            <jsTestSrcDir>${project.basedir}/src/test/js</jsTestSrcDir>
            <serverPort>8234</serverPort>

        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- not working yet, use mvn -X to debug -->
      <!-- need to setup jasmine tests against the angularjs directives -->
      <!-- <plugin> -->
        <!-- <groupId>com.github.timurstrekalov</groupId> -->
        <!-- <artifactId>saga-maven-plugin</artifactId> -->
        <!-- <version>1.5.3</version> -->
        <!-- <executions> -->
            <!-- <execution> -->
                <!-- <phase>verify</phase> -->
                <!-- <goals> -->
                    <!-- <goal>coverage</goal> -->
                <!-- </goals> -->
            <!-- </execution> -->
        <!-- </executions> -->
        <!-- <configuration> -->
            <!-- <baseDir>${project.basedir}/target/jasmine</baseDir> -->
            <!-- <includes> -->
                <!-- **/*Runner.html -->
            <!-- </includes> -->
            <!-- <outputDir>${project.basedir}/target/coverage</outputDir> -->
        <!-- </configuration> -->
      <!-- </plugin> -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tomcat-maven-plugin</artifactId>
        <version>1.1</version>
        <configuration>
            <port>8060</port>
            <path>/</path>
        </configuration>
      </plugin>

    </plugins>

  </build>
</project>
